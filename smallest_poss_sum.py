# Description
# Given an array X of positive integers, its elements are to be transformed by running
# the following operation on them as many times as required:
#
# if X[i] > X[j] then X[i] = X[i] - X[j] -> X[1] > X[0]  X[1] = X[1] - X[0]
#
# When no more transformations are possible, return its sum ("smallest possible sum").
#
# For instance, the successive transformation of the elements of input X = [6, 9, 21] is detailed below:
#
# X_1 = [6, 9, 12] # -> X_1[2] = X[2] - X[1] = 21 - 9
# X_2 = [6, 9, 6]  # -> X_2[2] = X_1[2] - X_1[0] = 12 - 6
# X_3 = [6, 3, 6]  # -> X_3[1] = X_2[1] - X_2[0] = 9 - 6
# X_4 = [6, 3, 3]  # -> X_4[2] = X_3[2] - X_3[1] = 6 - 3
# X_5 = [3, 3, 3]  # -> X_5[1] = X_4[0] - X_4[1] = 6 - 3
# The returning output is the sum of the final transformation (here 9).
#
# Example
# solution([6, 9, 21]) #-> 9
# Solution steps:
# [6, 9, 12] #-> X[2] = 21 - 9
# [6, 9, 6] #-> X[2] = 12 - 6
# [6, 3, 6] #-> X[1] = 9 - 6
# [6, 3, 3] #-> X[2] = 6 - 3
# [3, 3, 3] #-> X[1] = 6 - 3
# https://www.codewars.com/kata/52f677797c461daaf7000740

from math import gcd
def solution(a: list) -> int:
    return gcd(*a)*len(a)

test_0 = [6, 9, 21]  # 9
assert solution(test_0) == 9
test_1 = [60, 12, 96, 48, 60, 24, 72, 36, 72, 72, 48]  # 132
assert solution(test_1) == 132
test_2 = [3, 13, 23, 7, 83]  # 5
assert solution(test_2) == 5
test_3 = [4, 16, 24]  # 12
assert solution(test_3) == 12
random_1 = [139912588, 34978147, 25362675, 15410368, 114874075, 31698508, 59232268, 34067692, 153037147, 75750523, 30261123, 29414700, 43712512, 18379852, 22337163, 22337163, 2401200, 18379852, 34673328, 6939468, 112670307, 30261123, 6537267, 5893612, 28304812, 107254267, 71321643, 164092672, 73519408, 56871088, 9287308, 16862427, 4268800, 132676972, 10255792, 112122700, 112122700, 66183075, 116540908, 16024675, 12887107, 5645488, 23324323, 2481907, 8821075, 5645488, 92799043, 113769523, 86924107, 11446387, 51919947, 4058028, 24332827, 91312300, 142367148, 26947467, 35900608, 5048523, 8070700, 103542412, 89837563, 36210763, 11446387, 133272603, 137479372, 61641472, 138085675, 160801027, 74854075, 1734867, 7494412, 34369843, 54177075, 153037147, 82643968, 5165248, 7494412, 23075532, 91806547, 85008483, 49347328, 3362347, 126213075, 4706352, 147967947, 64512907, 54940123, 133272603, 121613443]
assert solution(random_1) == 59363
random_2 = [1260823729, 428696356, 623105604, 1344623401, 25312144, 1063119409, 80963289, 566490276, 267359521, 1804061281, 982680336, 642576484, 408897841, 35983684, 1920961449, 1812289600, 672344464, 111218041, 2256759241, 2138838724, 1063119409, 1887186961, 495196900, 713083536, 994849636, 348687889, 168086116, 1082131600, 408897841, 1845390096, 733902400, 404994304, 739153921, 270532900, 146265625, 1651280400, 1746987264, 134798400, 35983684, 928845225, 1853712025, 1179720025, 1146722500, 404994304, 876526596, 692564224, 1920961449, 49884769, 91747161, 28317025, 1845390096, 1573584100, 334384281, 74148481, 334384281, 882264889]
assert solution(random_2) == 524216
random_3 = [13845908, 2727317, 69222548, 25592468, 43913693, 2265408, 17831348, 82311572, 55695213, 32808212, 15445328, 65111252, 20012852, 90072692, 44469557, 60149117, 104923700, 59502357, 36751700, 21926912, 19640528, 1136637, 40385792, 1370432, 15942197, 99430173, 26017232, 35495325, 107942933, 1846325, 99430173, 17480000, 59502357, 3232052, 3779613, 19826253, 6828125, 101104757, 44469557, 19088597, 3698768, 34998893, 27531437, 86926292, 104495877, 84603200, 108377748]
assert solution(random_3) == 20539

